% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/msmsmatches.R
\name{matchMS}
\alias{matchMS}
\title{Searches for MS ions.}
\usage{
matchMS(
  out_path = "~/proteoM/outs",
  mgf_path = file.path(out_path, "mgf"),
  fasta = c("~/proteoM/dbs/fasta/uniprot/uniprot_hs_2020_05.fasta",
    "~/proteoM/dbs/fasta/crap/crap.fasta"),
  acc_type = c("uniprot_acc", "other"),
  acc_pattern = NULL,
  fixedmods = c("TMT6plex (N-term)", "TMT6plex (K)", "Carbamidomethyl (C)"),
  varmods = c("Acetyl (Protein N-term)", "Oxidation (M)", "Deamidated (N)",
    "Gln->pyro-Glu (N-term = Q)"),
  include_insource_nl = FALSE,
  exclude_phospho_nl = TRUE,
  enzyme = c("trypsin"),
  maxn_fasta_seqs = 200000L,
  maxn_vmods_setscombi = 64L,
  maxn_vmods_per_pep = 5L,
  maxn_sites_per_vmod = 3L,
  maxn_vmods_sitescombi_per_pep = 64L,
  min_len = 7L,
  max_len = 50L,
  max_miss = 2L,
  min_mass = 500L,
  max_mass = 6000L,
  ppm_ms1 = 20L,
  n_13c = 0L,
  type_ms2ions = "by",
  topn_ms2ions = 100L,
  min_ms2mass = 110L,
  minn_ms2 = 6L,
  ppm_ms2 = 25L,
  ppm_reporters = 10L,
  quant = c("none", "tmt6", "tmt10", "tmt11", "tmt16", "tmt18"),
  target_fdr = 0.01,
  fdr_type = c("psm", "peptide", "protein"),
  max_pepscores_co = Inf,
  max_protscores_co = Inf,
  match_pepfdr = TRUE,
  combine_tier_three = FALSE,
  max_n_prots = 40000L,
  use_ms1_cache = TRUE,
  .path_cache = NULL,
  .path_fasta = NULL,
  digits = 4L
)
}
\arguments{
\item{out_path}{A file path of outputs.}

\item{mgf_path}{The file path to a list of MGF files. The experimenters need
to supply the files. Note that the supported MGFs are from MSConvert or
Proteome Discoverer.}

\item{fasta}{Character string(s) to the name(s) of fasta file(s) with
prepended directory path. The experimenters need to supply the files.}

\item{acc_type}{Character string(s); the types of protein accessions in one
of c("uniprot_acc", "uniprot_id", "refseq_acc", "other"). For custom names,
the corresponding regular expressions need to be supplied via argument
\code{acc_pattern}.}

\item{acc_pattern}{Regular expression(s) describing the patterns to separate
the header lines of fasta entries. At the \code{NULL} default, the pattern
will be automated when \code{acc_type} are among c("uniprot_acc",
"uniprot_id", "refseq_acc", "other"). See also \link{load_fasta2} for
custom examples.}

\item{fixedmods}{A character vector of fixed modifications. See also
\link{parse_unimod} for grammars.}

\item{varmods}{A character vector of variable modifications. Multiple
modifications to the same residue are allowed, for example, both a less
common \code{Carbamyl (M)} and a common \code{Oxidation (M)}.}

\item{include_insource_nl}{Logical Logical; if TRUE, includes MS1 precursor
masses with the losses of neutral species prior to MS2 fragmentation. The
default is FALSE. The setting at TRUE remains experimenting by allowing
additional masses in the universe of MS1 precursors. The offsets in NLs (by
adding back precursor masses) have not yet taken into account in MS2 ion
searches. A more systemically approach such as \code{open} MS1 masses might
be developed in the future.}

\item{exclude_phospho_nl}{If TRUE, excludes neutral losses in the MS2 ion
searches against variable modifications of phospho sites. May toggle it to
\code{FALSE} if search speed against phospho data is not a primary concern.}

\item{enzyme}{A character string; the proteolytic specificity of the assumed
enzyme will be used to generate peptide sequences from proteins. The enzyme
is currently \code{trypsin}.}

\item{maxn_fasta_seqs}{Integer; the maximum number of protein sequences in
fasta files.}

\item{maxn_vmods_setscombi}{Integer; the maximum number of combinatorial
variable modifications and neutral losses.}

\item{maxn_vmods_per_pep}{The maximum number of \code{Anywhere}
(non-terminal) variable modifications per peptide.}

\item{maxn_sites_per_vmod}{Integer; the maximum number of combinatorial
\code{Anywhere} (non-terminal) variable modifications per site in a per
peptide sequence.}

\item{maxn_vmods_sitescombi_per_pep}{Integer; the maximum number of
combinatorial variable modifications per peptide sequence. The default is
64. May consider a smaller value, i.e. 32, when searching against
phosphopeptide data.}

\item{min_len}{A positive integer; the minimum length of peptides. Shorter
peptides will be excluded.}

\item{max_len}{A positive integer; the maximum length of peptides. Longer
peptides will be excluded.}

\item{max_miss}{A non-negative integer; the maximum number of mis-cleavages
per peptide sequence.}

\item{min_mass}{A non-negative integer; the minimum precursor mass for
interrogation.}

\item{max_mass}{A non-negative integer; the maximum precursor mass for
interrogation.}

\item{ppm_ms1}{A positive integer; the mass tolerance of MS1 species.}

\item{n_13c}{A non-negative integer; the maximum number of 13C off-sets for
consideration in MS1 masses. The default is 0 with no off-sets.
Peak-pickings by various MGF conversion tools may have attempted to adjust
precursor masses to the corresponding mono-isotopic masses in isotope
envelopes. Nevertheless, by setting \code{n_13c = 1}, another 1% increase
in the number of PSM may be readily achieved at a relatively small cost of
search time.}

\item{type_ms2ions}{Character; the type of
\href{http://www.matrixscience.com/help/fragmentation_help.html}{ MS2
ions}. Values are in one of "by", "ax" and "cz". The default is "by" for b-
and y-ions.}

\item{topn_ms2ions}{A non-negative integer; the top-n species for uses in MS2
ion searches. The default is to use the top-100 ions in an MS2 event.}

\item{min_ms2mass}{A non-negative integer; the minimum MS2 mass for
interrogation.}

\item{minn_ms2}{Integer; the minimum number of MS2 ions for consideration as
a hit.}

\item{ppm_ms2}{A positive integer; the mass tolerance of MS2 species.}

\item{ppm_reporters}{A positive integer; the mass tolerance of MS2 reporter
ions.}

\item{quant}{A quantitation method. The default is "none". Additional choices
include \code{tmt6, tmt10, tmt11, tmt16 and tmt18}. For other
multiplicities of \code{tmt}, use the compatible higher plexes. For
example, apply \code{tmt16} for \code{tmt12} provided a set of 12-plexes
being constructed from a 16-plex TMTpro (7 * 13C + 2 * 15N). It is also
possible that an experimenter may construct a \code{tmt12} from a 18-plex
TMTpro (8 *13C + 1 * 15N) and thus \code{quant = tmt18} is suitable.}

\item{target_fdr}{Numeric; a targeted false-discovery rate (FDR) at the
levels of PSM, peptide or protein. See also argument \code{fdr_type}.}

\item{fdr_type}{Character string; the type of FDR control. The value is in
one of c("psm", "peptide", "protein"). Note that \code{fdr_type = protein}
is equivalent to \code{fdr_type = peptide} with the additional filtration
of data at \code{prot_tier == 1}. A variant is to set \code{fdr_type =
psm}, followed by a data filtration at \code{prot_tier == 1}.}

\item{max_pepscores_co}{Numeric; the upper limit in the cut-offs of peptide
scores for discriminating significant and insignificant identities. For
higher quality and data-driven thresholds, choose \code{max_pepscores_co =
Inf}.}

\item{max_protscores_co}{Numeric; the upper limit in the cut-offs of protein
scores for discriminating significant and insignificant identities.  For
higher quality and data-driven thresholds, choose \code{max_protscores_co =
Inf}.}

\item{match_pepfdr}{Logical; if TRUE, matches empirically the highest
probability (corresponding to the lowest score) cut-offs to the pre-defined
level of \code{target_fdr} for peptide data. Choose \code{match_pepfdr =
FALSE} for higher data quality.}

\item{combine_tier_three}{Logical; if TRUE, combines search results at tiers
  1, 2 and 3 to the single output of \code{psmQ.txt}. The default is FALSE in
  that data will be segregated into the three quality tiers according to the
  choice of \code{fdr_type}. The (convenience) parameter matters since
  \href{http://github.com/qzhang503/proteoQ}{proteoQ} will only look for the
  inputs of \code{psmQ[...].txt}.

  For instance, if the aim is to bypass the constraint by protein FDR and
  focus on PSMs that have met the cut-offs specified by \code{target_fdr},
  experimenters may set \code{combine_tier_three = TRUE} and hence pool all
  significant peptides in \code{psmQ.txt} for downstream proteoQ.

  Tier-1: both proteins and peptides with scores above significance
  thresholds.

  Tier-2: \eqn{\ge} 2 significant peptides but protein scores below
  significance thresholds.

  Tier-3: one significant peptide and protein scores below significance
  thresholds.}

\item{max_n_prots}{Positive integer to threshold the maximum number of
  protein entries before coercing \code{fdr_type} from \code{psm} or
  \code{peptide} to \code{protein}. The argument has no effect if
  \code{fdr_type} is already \code{protein}. In general, there is no need to
  change the default.

  Note that for memory efficiency proteins at tiers 1, 2 and 3 are grouped
  separately. Further note that there is no tier-2 proteins at
  \code{fdr_type} of \code{psm} or \code{peptide}. For very large data sets,
  a lower value of \code{max_n_prots} can be used to reduce the chance of
  memory exhaustion by setting aside some protein entries from tier 1 to 2.}

\item{use_ms1_cache}{Logical; if TRUE, use cached precursor masses.

  Set \code{use_ms1_cache = TRUE} for reprocessing of data, e.g., from
  \code{fdr_type = psm} to \code{fdr_type = protein}.}

\item{.path_cache}{The file path of cached search parameters. At the NULL
default, the path is \code{"~/proteoM/.MSearches/Cache/Calls/"}. The
parameter is for users' awareness of the structure of file folders and the
default is suggested. Occasionally experimenters may remove the file folder
for disk space or (hopefully not) in events of (improper) structural change
incurred by the developer.}

\item{.path_fasta}{The parent file path to the theoretical masses of MS1
precursors. At the NULL default, the path is \code{gsub("(.*)\\.[^\\.]*$",
"\\1", get("fasta", envir = environment())[1])}. The parameter is for
users' awareness of the structure of file folders and the default is
suggested. Occasionally experimenters may remove the file folder for disk
space or (hopefully) in rare events of structural change incurred by the
developer.}

\item{digits}{Integer; the number of decimal places to be used.}
}
\value{
A list of complete PSMs in \code{psmC.txt}; a list of quality PSMs in
  \code{psmQ.txt}.
}
\description{
Database searches of MSMS data.
}
\examples{
\donttest{
# A hypothetical example
# (see also https://github.com/qzhang503/proteoM)
matchMS(
  fasta    = c("~/proteoM/dbs/fasta/refseq/refseq_hs_2013_07.fasta",
               "~/proteoM/dbs/fasta/refseq/refseq_mm_2013_07.fasta",
               "~/proteoM/dbs/fasta/crap/crap.fasta"),
  acc_type = c("refseq_acc", "refseq_acc", "other"),
  max_miss = 2,
  quant    = "tmt10",
  fdr_type = "protein",
  out_path = "~/proteoM/examples",
)

\dontrun{
# Hypothetical phosphopeptides and 16-plex TMTpro
matchMS(
  fasta     = c("~/proteoM/dbs/fasta/refseq/refseq_hs_2013_07.fasta",
                "~/proteoM/dbs/fasta/refseq/refseq_mm_2013_07.fasta",
                "~/proteoM/dbs/fasta/crap/crap.fasta"),
  acc_type  = c("refseq_acc", "refseq_acc", "other"),
  fixedmods = c("TMTpro (N-term)", "TMTpro (K)", "Carbamidomethyl (C)"),
  varmods   = c("Acetyl (Protein N-term)", "Oxidation (M)",
                "Deamidated (N)", "Phospho (S)", "Phospho (T)",
                "Phospho (Y)", "Gln->pyro-Glu (N-term = Q)"),
  max_miss  = 2,
  maxn_vmods_sitescombi_per_pep
            = 32,
  quant     = "tmt16",
  fdr_type  = "protein",
  out_path  = "~/proteoM/examples",
)

# Hypothetical phosphopeptides and 18-plex TMTpro
matchMS(
  fasta     = c("~/proteoM/dbs/fasta/refseq/refseq_hs_2013_07.fasta",
                "~/proteoM/dbs/fasta/refseq/refseq_mm_2013_07.fasta",
                "~/proteoM/dbs/fasta/crap/crap.fasta"),
  acc_type  = c("refseq_acc", "refseq_acc", "other"),
  fixedmods = c("TMTpro18 (N-term)", "TMTpro18 (K)", "Carbamidomethyl (C)"),
  varmods   = c("Acetyl (Protein N-term)", "Oxidation (M)",
                "Deamidated (N)", "Phospho (S)", "Phospho (T)",
                "Phospho (Y)", "Gln->pyro-Glu (N-term = Q)"),
  max_miss  = 2,
  maxn_vmods_sitescombi_per_pep
            = 32,
  quant     = "tmt18",
  fdr_type  = "protein",
  out_path  = "~/proteoM/examples",
)
}

}
}
\seealso{
\link{load_fasta2} for setting the values of \code{acc_type} and
  \code{acc_pattern}. \cr \link{table_unimods} summarizes
  \href{https://www.unimod.org/}{Unimod} into a table format. \cr
  \link{parse_unimod} for the grammar of Unimod.
  \href{https://proteoq.netlify.app/post/mixing-data-at-different-tmt-plexes/}{For
   example}, the name tag of "TMT6plex" is common among TMT-6, -10 and -11
  while "TMTpro" is specific to TMT-16.
}
