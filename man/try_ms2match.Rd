% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/msmsmatches.R
\name{try_ms2match}
\alias{try_ms2match}
\title{Helper of \link{ms2match}.}
\usage{
try_ms2match(
  mgf_path,
  aa_masses_all,
  out_path,
  mod_indexes,
  type_ms2ions,
  maxn_vmods_per_pep,
  maxn_sites_per_vmod,
  maxn_vmods_sitescombi_per_pep,
  minn_ms2,
  ppm_ms1,
  ppm_ms2,
  min_ms2mass,
  quant,
  ppm_reporters,
  fasta,
  acc_type,
  acc_pattern,
  topn_ms2ions,
  fixedmods,
  varmods,
  include_insource_nl,
  enzyme,
  maxn_fasta_seqs,
  maxn_vmods_setscombi,
  min_len,
  max_len,
  max_miss,
  target_fdr,
  fdr_type,
  combine_tier_three,
  digits
)
}
\arguments{
\item{mgf_path}{The file path to a list of MGF files. The experimenters need
to supply the files. Note that the supported MGFs are from MSConvert or
Proteome Discoverer.}

\item{aa_masses_all}{All the amino acid lookup tables.}

\item{out_path}{A file path of outputs.}

\item{type_ms2ions}{Character; the type of
\href{http://www.matrixscience.com/help/fragmentation_help.html}{ MS2
ions}. Values are in one of "by", "ax" and "cz". The default is "by" for b-
and y-ions.}

\item{maxn_vmods_per_pep}{The maximum number of \code{Anywhere}
(non-terminal) variable modifications per peptide.}

\item{maxn_sites_per_vmod}{Integer; the maximum number of combinatorial
\code{Anywhere} (non-terminal) variable modifications per site in a per
peptide sequence.}

\item{maxn_vmods_sitescombi_per_pep}{Integer; the maximum number of
combinatorial variable modifications per peptide sequence. The default is
64. May consider a smaller value, i.e. 32, when searching against
phosphopeptide data.}

\item{minn_ms2}{Integer; the minimum number of MS2 ions for consideration as
a hit.}

\item{ppm_ms1}{A positive integer; the mass tolerance of MS1 species.}

\item{ppm_ms2}{A positive integer; the mass tolerance of MS2 species.}

\item{min_ms2mass}{A non-negative integer; the minimum MS2 mass for
interrogation.}

\item{quant}{A quantitation method. The default is "none". Additional choices
include \code{tmt6, tmt10, tmt11, tmt16 and tmt18}. For other
multiplicities of \code{tmt}, use the compatible higher plexes. For
example, apply \code{tmt16} for \code{tmt12} provided a set of 12-plexes
being constructed from a 16-plex TMTpro (7 * 13C + 2 * 15N). It is also
possible that an experimenter may construct a \code{tmt12} from a 18-plex
TMTpro (8 *13C + 1 * 15N) and thus \code{quant = tmt18} is suitable.}

\item{ppm_reporters}{A positive integer; the mass tolerance of MS2 reporter
ions.}

\item{fasta}{Character string(s) to the name(s) of fasta file(s) with
prepended directory path. The experimenters need to supply the files.}

\item{acc_type}{Character string(s); the types of protein accessions in one
of c("uniprot_acc", "uniprot_id", "refseq_acc", "other"). For custom names,
the corresponding regular expressions need to be supplied via argument
\code{acc_pattern}.}

\item{acc_pattern}{Regular expression(s) describing the patterns to separate
the header lines of fasta entries. At the \code{NULL} default, the pattern
will be automated when \code{acc_type} are among c("uniprot_acc",
"uniprot_id", "refseq_acc", "other"). See also \link{load_fasta2} for
custom examples.}

\item{topn_ms2ions}{A non-negative integer; the top-n species for uses in MS2
ion searches. The default is to use the top-100 ions in an MS2 event.}

\item{fixedmods}{A character vector of fixed modifications. See also
\link{parse_unimod} for grammars.}

\item{varmods}{A character vector of variable modifications. Multiple
modifications to the same residue are allowed, for example, both a less
common \code{Carbamyl (M)} and a common \code{Oxidation (M)}.}

\item{include_insource_nl}{Logical Logical; if TRUE, includes MS1 precursor
masses with the losses of neutral species prior to MS2 fragmentation. The
default is FALSE. The setting at TRUE remains experimenting by allowing
additional masses in the universe of MS1 precursors. The offsets in NLs (by
adding back precursor masses) have not yet taken into account in MS2 ion
searches. A more systemically approach such as \code{open} MS1 masses might
be developed in the future.}

\item{enzyme}{A character string; the proteolytic specificity of the assumed
enzyme will be used to generate peptide sequences from proteins. The enzyme
is currently \code{trypsin}.}

\item{maxn_fasta_seqs}{Integer; the maximum number of protein sequences in
fasta files.}

\item{maxn_vmods_setscombi}{Integer; the maximum number of combinatorial
variable modifications and neutral losses.}

\item{min_len}{A positive integer; the minimum length of peptides. Shorter
peptides will be excluded.}

\item{max_len}{A positive integer; the maximum length of peptides. Longer
peptides will be excluded.}

\item{max_miss}{A non-negative integer; the maximum number of mis-cleavages
per peptide sequence.}

\item{target_fdr}{Numeric; a targeted false-discovery rate (FDR) at the
levels of PSM, peptide or protein. See also argument \code{fdr_type}.}

\item{fdr_type}{Character string; the type of FDR control. The value is in
one of c("psm", "peptide", "protein"). Note that \code{fdr_type = protein}
is equivalent to \code{fdr_type = peptide} with the additional filtration
of data at \code{prot_tier == 1}. A variant is to set \code{fdr_type =
psm}, followed by a data filtration at \code{prot_tier == 1}.}

\item{combine_tier_three}{Logical; if TRUE, combines search results at tiers
  1, 2 and 3 to the single output of \code{psmQ.txt}. The default is FALSE in
  that data will be segregated into the three quality tiers according to the
  choice of \code{fdr_type}. The (convenience) parameter matters since
  \href{http://github.com/qzhang503/proteoQ}{proteoQ} will only look for the
  inputs of \code{psmQ[...].txt}.

  For instance, if the aim is to bypass the constraint by protein FDR and
  focus on PSMs that have met the cut-offs specified by \code{target_fdr},
  experimenters may set \code{combine_tier_three = TRUE} and hence pool all
  significant peptides in \code{psmQ.txt} for downstream proteoQ.

  Tier-1: both proteins and peptides with scores above significance
  thresholds.

  Tier-2: \eqn{\ge} 2 significant peptides but protein scores below
  significance thresholds.

  Tier-3: one significant peptide and protein scores below significance
  thresholds.}

\item{digits}{Integer; the number of decimal places to be used.}
}
\description{
Not yet used.
}
\examples{
try_ms2match(mgf_path = mgf_path,
  aa_masses_all = aa_masses_all,
  out_path = out_path,
  mod_indexes = find_mod_indexes(out_path),
  type_ms2ions = type_ms2ions,
  maxn_vmods_per_pep = maxn_vmods_per_pep,
  maxn_sites_per_vmod = maxn_sites_per_vmod,
  maxn_vmods_sitescombi_per_pep =
    maxn_vmods_sitescombi_per_pep,
  minn_ms2 = minn_ms2,
  ppm_ms1 = ppm_ms1,
  ppm_ms2 = ppm_ms2,
  min_ms2mass = min_ms2mass,
  quant = quant,
  ppm_reporters = ppm_reporters,

  # dummy for argument matching
  fasta = fasta,
  acc_type = acc_type,
  acc_pattern = acc_pattern,
  topn_ms2ions = topn_ms2ions,
  fixedmods = fixedmods,
  varmods = varmods,
  include_insource_nl = include_insource_nl,
  enzyme = enzyme,
  maxn_fasta_seqs = maxn_fasta_seqs,
  maxn_vmods_setscombi = maxn_vmods_setscombi,
  min_len = min_len,
  max_len = max_len,
  max_miss = max_miss,

  target_fdr = target_fdr,
  fdr_type = fdr_type,
  combine_tier_three = combine_tier_three,

  digits = digits)
}
