% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_ui.R
\name{find_intercombi}
\alias{find_intercombi}
\title{Finds the combinations across residues.}
\usage{
find_intercombi(intra_combis, maxn_vmods_per_pep = 5L)
}
\arguments{
\item{intra_combis}{The results from \link{unique_mvmods}.}

\item{maxn_vmods_per_pep}{A non-negative integer; the maximum number of
\code{Anywhere} (non-terminal) variable modifications per peptide. The
default is 5.}
}
\description{
For uses with MS1 precursors. For multiple residues (each residue one to
multiple modifications).
}
\examples{
\donttest{
library(mzion)

C <- list(c("Carbamidomethyl (C)"),
          rep("Carbamidomethyl (C)", 2))

N <- list(c("Deamidated (N)"),
          rep("Deamidated (N)", 2))

intra_combis <- list(C = C, N = N)

ans <- mzion:::find_intercombi(intra_combis)

# three large lists
S <- list(c("Carbamidomethyl (S)", "Phospho (S)", "Phospho (S)"),
           c("Carbamidomethyl (S)", "Phospho (S)", "Phospho (S)", "Phospho (S)"))

M <- list(c("Oxidation (M)", "Carbamidomethyl (M)"), 
          c("Oxidation (M)", "Carbamidomethyl (M)", "Carbamyl (M)"))

N <- list(c("Deamidated (N)"),
          rep("Deamidated (N)", 2))

ans <- mzion:::find_intercombi(list(S = S, M = M, N = N))
}
}
