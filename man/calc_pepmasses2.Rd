% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ms1_precursors.R
\name{calc_pepmasses2}
\alias{calc_pepmasses2}
\title{Generates and Calculates the masses of tryptic peptides from a fasta
database.}
\usage{
calc_pepmasses2(
  aa_masses = NULL,
  fasta = "~/proteoM/dbs/fasta/uniprot/uniprot_hs_2020_05.fasta",
  acc_type = "uniprot_acc",
  acc_pattern = NULL,
  fixedmods = c("TMT6plex (N-term)", "TMT6plex (K)", "Carbamidomethyl (C)"),
  varmods = c("Acetyl (Protein N-term)", "Oxidation (M)", "Deamidated (N)",
    "Gln->pyro-Glu (N-term = Q)"),
  fixedlabs = NULL,
  varlabs = NULL,
  mod_motifs = NULL,
  enzyme = c("trypsin_p"),
  custom_enzyme = c(Cterm = NULL, Nterm = NULL),
  maxn_fasta_seqs = 50000L,
  maxn_vmods_setscombi = 64L,
  maxn_vmods_per_pep = 5L,
  maxn_sites_per_vmod = 3L,
  min_len = 7L,
  max_len = 40L,
  max_miss = 2L,
  min_mass = 700L,
  max_mass = 4500L,
  n_13c = 0L,
  out_path = NULL,
  digits = 4L,
  use_ms1_cache = TRUE,
  .path_cache = NULL,
  .path_fasta = NULL,
  .path_ms1masses = NULL
)
}
\arguments{
\item{aa_masses}{An amino acid mass look-up.}

\item{fasta}{Character string(s) to the name(s) of fasta file(s) with
prepended directory path. The experimenter needs to supply the files.}

\item{acc_type}{Character string(s); the types of protein accessions in one
of c("uniprot_acc", "uniprot_id", "refseq_acc", "other"). For custom names,
the corresponding regular expressions need to be supplied via argument
\code{acc_pattern}.}

\item{acc_pattern}{Regular expression(s) describing the patterns in
separating the header lines of fasta entries. At the \code{NULL} default,
the pattern will be automated when \code{acc_type} are among
c("uniprot_acc", "uniprot_id", "refseq_acc", "other"). See also
\link{load_fasta2} for custom examples.}

\item{fixedmods}{A character vector of fixed modifications. See also
\link{parse_unimod} for grammars.}

\item{varmods}{A character vector of variable modifications.}

\item{fixedlabs}{Character string(s) of fixed isotopic labels. See examples
of SILAC for details. Can be but not typically used in standard alone
searches of labeled residues.}

\item{varlabs}{Character string(s) of variable isotopic labels. See examples
of SILAC for details. Can be but not typically used in standard alone
searches of labeled residues.}

\item{mod_motifs}{The motifs to restrict \code{Anywhere} variable
  modification. For example, provided the \code{Anywhere} variable
  modifications containing \code{c("Oxidation (M)", "Deamidated (N)")} and

  \code{mod_motifs = list(`Deamidated (N)` = c("NG", "NM"), `Oxidation (M)` =
  c("NM", "MP"))}

  variable modifications will only be considered at sites that satisfy the
  motifs.}

\item{enzyme}{A character string; the proteolytic specificity of the assumed
enzyme will be used to generate peptide sequences from proteins. The enzyme
is currently \code{trypsin}.}

\item{custom_enzyme}{Regular expression(s) for custom enzyme specificity. The
  default is NULL. Uses of custom enzyme specificity is probably rather
  infrequent. Should there be such need, the argument \code{enzyme} will be
  ignored and the following may be applied:

  \cr ## Examples \cr \cr # Equivalent to Trypsin \cr # at the Cterm of K or
  R but not followed by P \cr # (the quantifiers "\{1\}" can be skipped at a
  small cost of speed) \cr custom_enzyme = c(Cterm =
  "([KR]\{1\})([^P]\{1\})")

  \cr # GluN again \cr custom_enzyme = c(Nterm = "([E]\{1\})")

  \cr # Trypsin_P + GluN \cr custom_enzyme = c(Cterm = "([KR]\{1\})", Nterm =
  "([E]\{1\})")

  \cr # Faked: Trypsin, proline not allowed on neither Nterm or Cterm \cr
  custom_enzyme = c(Cterm = "([KR]\{1\})([^P]\{1\})", Nterm =
  "([^P]\{1\})([KR]\{1\})")}

\item{maxn_fasta_seqs}{Integer; the maximum number of protein sequences in
fasta files.}

\item{maxn_vmods_setscombi}{Integer; the maximum number of combinatorial variable
modifications and neutral losses.}

\item{maxn_vmods_per_pep}{The maximum number of variable modifications per
peptide.}

\item{maxn_sites_per_vmod}{Integer; the maximum number of combinatorial
variable modifications per site in a per peptide sequence.}

\item{min_len}{Integer; the minimum length of peptides. Shorter peptides will
be excluded.}

\item{max_len}{Integer; the maximum length of peptides. Longer peptides will
be excluded.}

\item{max_miss}{The maximum number of mis-cleavages per peptide sequence.}

\item{min_mass}{A positive integer; the minimum precursor mass for
interrogation. The default is an arbitrarily low value. The primary guard
against low molecular-weight precursors is \code{min_len}.}

\item{max_mass}{A positive integer; the maximum precursor mass for
interrogation. The default is 4500.}

\item{n_13c}{A non-negative integer; the maximum number of 13C off-sets for
consideration in MS1 masses. The default is 0 with no off-sets.
Peak-pickings by various MGF conversion tools may have attempted to adjust
precursor masses to the corresponding mono-isotopic masses in isotope
envelopes. Nevertheless, by setting \code{n_13c = 1}, some increases in the
number of PSMs may be readily achieved at a relatively small cost of search
time.}

\item{out_path}{An output path.}

\item{digits}{Integer; the number of decimal places to be used.}

\item{use_ms1_cache}{Logical; at the TRUE default, use cached precursor
  masses.

  Set \code{use_ms1_cache = TRUE} for reprocessing of data, e.g., from
  \code{fdr_type = psm} to \code{fdr_type = protein}.}

\item{.path_cache}{The file path of cached search parameters. The parameter
is for the users' awareness of the underlying structure of file folders and
the use of default is suggested. Occasionally experimenters may remove the
file folder for disk space or under infrequent events of modified framework
incurred by the developer.}

\item{.path_fasta}{The parent file path to the theoretical masses of MS1
precursors. At the NULL default, the path is \code{gsub("(.*)\\.[^\\.]*$",
"\\1", get("fasta", envir = environment())[1])}. The parameter is for the
users' awareness of the structure of file folders and the use of default is
suggested. Occasionally experimenters may remove the file folder for disk
space or under infrequent events of modified framework incurred by the
developer.}

\item{.path_ms1masses}{The file path to the theoretical masses of MS1
precursors.}
}
\description{
Generates and Calculates the masses of tryptic peptides from a fasta
database.
}
\examples{
\donttest{
res <- calc_pepmasses2()

library(purrr)
library(magrittr)

res_attrs <- lapply(res, attributes)
lapply(res_attrs, names)
lapply(res_attrs, `[[`, "vmods")
res_mods <- lapply(res_attrs, `[`,
                   c("fmods", "fmods_ps", "fmods_neuloss",
                     "vmods", "vmods_ps", "vmods_neuloss"))

res_data <- lapply(res_attrs, `[[`, "data")
peps_combi_1 <- res_data[[1]]

# base: fixedmods without neulosses
length(unlist(res_data[[1]], use.names = FALSE))

# fixedmods, fixedmods + fixedmods_neulosses, varmods, varmods_neulosses
length(unlist(res_data, use.names = FALSE))

}
}
